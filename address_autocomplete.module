<?php

/**
 * Implementation of hook_menu().
 */
function address_autocomplete_menu() {

  $items = array();

  $items['admin/config/development/address-autocomplete'] = array(
    'title' => 'Autocomplete address settings',
    'description' => 'Autocomplete address settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('address_autocomplete_form'),
    'access arguments' => array('administer autocomplete address settings'),
    'file' => 'components/address_autocomplete.admin.inc',
    'type' => MENU_NORMAL_ITEM,
   );

  return $items;
}

/**
 * Implementation of hook_webform_component_defaults_alter().
 */
function address_autocomplete_form_webform_component_defaults_alter(&$defaults, $type) {
  if ($type == 'textfield') {
    $defaults['extra']['autocomplete'] = TRUE;
    $defaults['extra']['select-fields'] = TRUE;
  }
}

/**
 * Implementation of hook_form_webform_component_edit_form_alter().
 */
function address_autocomplete_form_webform_component_edit_form_alter(&$form, $form_state) {
  $component = $form_state['build_info']['args'][1];
  $module_path = drupal_get_path('module', 'address_autocomplete');
  if ($component['type'] == 'textfield') {
  	$form['extra']['autocomplete'] = array(
      '#type' => 'checkbox',
      '#title' => t('Use autocompletion'),
      '#description' => t('Enable autocompletion functionality for autocomplete address field.'),
      '#default_value' => isset($component['extra']['autocomplete']) ? $component['extra']['autocomplete'] : '',
    );
    $form['extra']['select-fields'] = array(
      '#type' => 'select',
      '#title' => t('Select type of field.'),
      '#description' => t('Field type.'),
      '#options' => array('Address', 'Street Number', 'Route', 'City', 'State', 'Country', 'ZIP code'),
      '#default_value' => isset($component['extra']['select-fields']) ? $component['extra']['select-fields'] : '',
      '#states' => array(
        'visible' => array(
          ':input[name="extra[autocomplete]"]' => array('checked' => TRUE),
        ),
        'required' => array(
          ':input[name="extra[autocomplete]"]' => array('checked' => TRUE),
        ),
      ),
    );
  }
}

/**
 * Implementation of hook_webform_component_render_alter().
 */
function address_autocomplete_webform_component_render_alter(&$element, &$component, $filter = TRUE) {
  if ($component['type'] == 'textfield' && isset($component['extra']['autocomplete'])) {
    
    switch ($component['extra']['select-fields']) {
      case 0:
        $element['#attributes']['id'] = array('autocomplete');
        break;
      case 1:
        $element['#attributes']['class'] = array('street_number');
        break;
      case 2:
        $element['#attributes']['class'] = array('route');
        break;
      case 3:
        $element['#attributes']['class'] = array('locality');
        break;
      case 4:
        $element['#attributes']['class'] = array('administrative_area_level_1');
        break;
      case 5:
        $element['#attributes']['class'] = array('country');
        break;
      case 6:
        $element['#attributes']['class'] = array('postal_code');
        break;
    }
		$module_path = drupal_get_path('module', 'address_autocomplete');
		// Get API key set in the settings.
		$api_key = variable_get('api_key');
		$country_selected = variable_get('country_selected');
		// Load autocomplete JS.
		drupal_add_js($module_path . '/js/address-autocomplete.js');
		if ($country_selected) {
			drupal_add_js(array('address_autocomplete' => array('country_selected' => $country_selected)), array('type' => 'setting'));
		}
		else {
			drupal_add_js(array('address_autocomplete' => array('country_selected' => '')), array('type' => 'setting'));
		}
		drupal_add_js('https://maps.googleapis.com/maps/api/js?key=' . $api_key . '&libraries=places', 'external');
  }
}
